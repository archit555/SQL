# Write your MySQL query statement below

Question:

Table: Employee

+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| id           | int     |
| company      | varchar |
| salary       | int     |
+--------------+---------+
id is the primary key column for this table.
Each row of this table indicates the company and the salary of one employee.
 

Write an SQL query to find the median salary of each company.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Employee table:
+----+---------+--------+
| id | company | salary |
+----+---------+--------+
| 1  | A       | 2341   |
| 2  | A       | 341    |
| 3  | A       | 15     |
| 4  | A       | 15314  |
| 5  | A       | 451    |
| 6  | A       | 513    |
| 7  | B       | 15     |
| 8  | B       | 13     |
| 9  | B       | 1154   |
| 10 | B       | 1345   |
| 11 | B       | 1221   |
| 12 | B       | 234    |
| 13 | C       | 2345   |
| 14 | C       | 2645   |
| 15 | C       | 2645   |
| 16 | C       | 2652   |
| 17 | C       | 65     |
+----+---------+--------+
Output: 
+----+---------+--------+
| id | company | salary |
+----+---------+--------+
| 5  | A       | 451    |
| 6  | A       | 513    |
| 12 | B       | 234    |
| 9  | B       | 1154   |
| 14 | C       | 2645   |
+----+---------+--------+


Solution:



WITH BASE AS (
SELECT 
    company, 
    count(*) as c
FROM Employee
GROUP BY 1
),
even as (
SELECT 
    id, 
    company,
    salary,
    ROW_NUMBER() OVER (PARTITION BY company ORDER BY salary) as r
FROM Employee
WHERE company in (
SELECT company 
FROM BASE 
WHERE c % 2 = 0)
),
even1 as 
(
SELECT 
    id, 
    company, 
    salary,
    r, 
    ROUND((max(r) OVER (PARTITION BY company)/2),0) as mid1,
    ROUND((max(r) OVER (PARTITION BY company)/2)+1) as mid2
FROM even
),
odd as (
SELECT 
    id, 
    company,
    salary,
    ROW_NUMBER() OVER (PARTITION BY company ORDER BY salary) as r
FROM Employee
WHERE company in (
SELECT company 
FROM BASE 
WHERE c % 2 = 1)
),
odd1 as 
(
SELECT 
    id, 
    company, 
    salary,
    r, 
    ROUND((max(r) OVER (PARTITION BY company)/2),0) as mid1
FROM odd
),
final as
(
SELECT id, company, salary from odd1
WHERE r = mid1
UNION
SELECT id, company, salary from even1
WHERE r = mid1 or r = mid2
)
SELECT * FROM final
ORDER BY company asc
